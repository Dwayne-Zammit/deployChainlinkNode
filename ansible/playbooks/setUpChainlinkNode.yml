---
- name: Setup Chainlink Node on Ubuntu Server
  hosts: servers
  become: yes
  tasks:
    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker
      ansible.builtin.apt:
        name: docker.io
        state: present

    - name: Start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add current user to Docker group
      ansible.builtin.user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes

    - name: Run Postgres container
      ansible.builtin.docker_container:
        name: cl-postgres
        image: postgres
        env:
          POSTGRES_PASSWORD: {{POSTGRESPASSWORD}}
        published_ports:
          - "5432:5432"
        state: started

    - name: Create Chainlink config directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.chainlink-sepolia-ansible"
        state: directory
        mode: '0755'

    - name: Create config.toml for Chainlink
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.chainlink-sepolia-ansible/config.toml"
        content: |
          [Log]
          Level = 'warn'

          [WebServer]
          AllowOrigins = '*'
          SecureCookies = false

          [WebServer.TLS]
          HTTPSPort = 0

          [[EVM]]
          ChainID = '11155111'

          [[EVM.Nodes]]
          Name = 'Sepolia'
          WSURL = 'wss://eth-sepolia.g.alchemy.com/v2/{{ALCHEMYAPPAPIKEY}}'
          HTTPURL = 'https://eth-sepolia.g.alchemy.com/v2/{{ALCHEMYAPPAPIKEY}}'

    - name: Create secrets.toml for Chainlink
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.chainlink-sepolia-ansible/secrets.toml"
        content: |
          [Password]
          Keystore = '{{CHAINLINKKEYSTOREPASSWORD}}'

          [Database]
          URL = 'postgresql://postgres:{{POSTGRESPASSWORD}}@host.docker.internal:5432/postgres?sslmode=disable'

    - name: Create .api credentials for Chainlink
      ansible.builtin.copy:
        dest: "{{ ansible_env.HOME }}/.chainlink-sepolia-ansible/.api"
        content: |
          test-api@gmail.com
          {{CHAINLINKNODEPASSWORD}}
        mode: '0600'

    - name: Run Chainlink node Docker container with custom command
      ansible.builtin.shell: |
        sudo chmod 644 ~/.chainlink-sepolia-ansible/.api && \
        cd ~/.chainlink-sepolia-ansible && \
        sudo docker run --platform linux/x86_64/v8 \
          --name chainlink \
          -v ~/.chainlink-sepolia-ansible:/chainlink \
          -d \
          -p 6688:6688 \
          --add-host=host.docker.internal:host-gateway \
          smartcontract/chainlink:2.16.0 \
          node -config /chainlink/config.toml \
          -secrets /chainlink/secrets.toml \
          start -a /chainlink/.api
      become: yes
      ignore_errors: yes

    - name: Wait for Chainlink container to become healthy
      ansible.builtin.wait_for:
        port: 6688
        delay: 10
        timeout: 40
        state: started
 
    # Get Chainlink authentication session
    - name: Get Chainlink authentication session
      ansible.builtin.uri:
        url: http://localhost:6688/sessions
        method: POST
        body_format: json
        body:
          email: "test@gmail.com"
          password: "{{ CHAINLINKNODEPASSWORD }}"
        return_content: yes
        status_code: 200
        headers:
          Content-Type: "application/json"
      register: auth_response

    # Debug the authentication response
    - name: Debug authentication response
      ansible.builtin.debug:
        var: auth_response

    # Set auth token as a fact
    - name: Set auth token as a fact
      ansible.builtin.set_fact:
        chainlink_auth_token: "{{ auth_response.json.data.attributes.token }}"

    # Fetch the wallet address using the API
    - name: Get Chainlink node wallet address
      ansible.builtin.uri:
        url: http://localhost:6688/v2/keys/eth
        method: GET
        headers:
          Authorization: "Bearer {{ chainlink_auth_token }}"
        return_content: yes
      register: wallet_address_response

    # Debug the wallet address response
    - name: Debug wallet address response
      ansible.builtin.debug:
        var: wallet_address_response

    # Store Chainlink wallet address
    - name: Store Chainlink wallet address
      ansible.builtin.set_fact:
        chainlink_wallet_address: "{{ wallet_address_response.json.data[0].attributes.address }}"

    # Echo Chainlink wallet address
    - name: Echo Chainlink wallet address
      ansible.builtin.debug:
        msg: "Chainlink Node Wallet Address: {{ chainlink_wallet_address }}"